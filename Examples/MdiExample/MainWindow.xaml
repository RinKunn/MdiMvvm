<Window x:Class="MdiExample.MainWindow"
        xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
        xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
        xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
        xmlns:local="clr-namespace:MdiExample"
        xmlns:control="clr-namespace:MdiMvvm;assembly=MdiMvvm"
        mc:Ignorable="d"
        WindowState="Maximized"
        d:DataContext="{d:DesignInstance Type=local:MainWindowViewModel, IsDesignTimeCreatable=False}"
        Title="MainWindow" Height="450" Width="800">
    
    <Window.Resources>

        <ResourceDictionary>
            <ResourceDictionary.MergedDictionaries>
                <ResourceDictionary Source="/MdiExample;component/LoadingSpinner.xaml"/>
            </ResourceDictionary.MergedDictionaries>

        <BooleanToVisibilityConverter x:Key="BooleanToVisibilityConverter" />

            <Style x:Key="cp" TargetType="{x:Type control:MdiWindow}">
                <Setter Property="Uid" Value="{Binding Guid, Mode=OneWay}"/>
            <Setter Property="Title" Value="{Binding Title, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"/>
            <Setter Property="IsModal" Value="{Binding IsModal, Mode=OneWayToSource, UpdateSourceTrigger=PropertyChanged}"/>
            <Setter Property="Width" Value="{Binding CurrentWidth, Mode=TwoWay, NotifyOnSourceUpdated=True, UpdateSourceTrigger=PropertyChanged}"/>
            <Setter Property="Height" Value="{Binding CurrentHeight, Mode=TwoWay, NotifyOnSourceUpdated=True, UpdateSourceTrigger=PropertyChanged}"/>
            <Setter Property="Canvas.Left" Value="{Binding CurrentLeft, Mode=TwoWay, NotifyOnSourceUpdated=True, UpdateSourceTrigger=PropertyChanged}"/>
            <Setter Property="Canvas.Top" Value="{Binding CurrentTop, Mode=TwoWay, NotifyOnSourceUpdated=True, UpdateSourceTrigger=PropertyChanged}"/>
            <Setter Property="WindowState" Value="{Binding WindowState, Mode=TwoWay, NotifyOnSourceUpdated=True, UpdateSourceTrigger=PropertyChanged}"/>

                <!--<Setter Property="ScreenShot" Value="{Binding ScreenShot, Mode=TwoWay, NotifyOnSourceUpdated=True, UpdateSourceTrigger=PropertyChanged}"/>-->

            <Setter Property="PreviousWidth" Value="{Binding PreviousWidth, Mode=TwoWay, NotifyOnSourceUpdated=True, UpdateSourceTrigger=PropertyChanged}"/>
            <Setter Property="PreviousHeight" Value="{Binding PreviousHeight, Mode=TwoWay, NotifyOnSourceUpdated=True, UpdateSourceTrigger=PropertyChanged}"/>
            <Setter Property="PreviousLeft" Value="{Binding PreviousLeft, Mode=TwoWay, NotifyOnSourceUpdated=True, UpdateSourceTrigger=PropertyChanged}"/>
            <Setter Property="PreviousTop" Value="{Binding PreviousTop, Mode=TwoWay, NotifyOnSourceUpdated=True, UpdateSourceTrigger=PropertyChanged}"/>
            <Setter Property="PreviousWindowState" Value="{Binding PreviousState, Mode=TwoWay, NotifyOnSourceUpdated=True, UpdateSourceTrigger=PropertyChanged}"/>
            <Setter Property="IsSelected" Value="{Binding IsSelected, Mode=TwoWay, NotifyOnSourceUpdated=True, UpdateSourceTrigger=PropertyChanged}"/>
            
            <Setter Property="IsResizable" Value="True"/>
            <Setter Property="HasDropShadow" Value="False"/>
        </Style>

        <DataTemplate DataType="{x:Type local:MdiContainerViewModel}">
            <control:MdiContainer
                ItemsSource="{Binding WindowsCollection}"
                ItemContainerStyle="{StaticResource cp}"/>
        </DataTemplate>
            

        </ResourceDictionary>
    </Window.Resources>

    <Grid x:Name="asdasd">
        <Grid.RowDefinitions>
            <RowDefinition Height="Auto"/>
            <RowDefinition/>
        </Grid.RowDefinitions>
        
        <Menu>
            <MenuItem Header="+" Command="{Binding SelectedContainer.AddCommand}"/>
            <MenuItem Header="++" Command="{Binding SelectedContainer.AddCommandModal}"/>
            <MenuItem Header="Save" Command="{Binding SaveCommand}"/>
            <MenuItem Header="Load" Command="{Binding LoadCommand}"/>
            <TextBlock Text="{Binding SelectedContainer.WindowsCount, StringFormat={}Окон: {0}}" Foreground="Blue"/>
        </Menu>

        <TabControl 
            Grid.Row="1"
            ItemsSource="{Binding Containers}"
            SelectedItem="{Binding SelectedContainer, NotifyOnSourceUpdated=True, UpdateSourceTrigger=PropertyChanged}">

            <TabControl.ItemTemplate>
                <DataTemplate DataType="{x:Type local:MdiContainerViewModel}">
                    <TextBlock Text="{Binding Title}"/>
                </DataTemplate>
            </TabControl.ItemTemplate>
        </TabControl>

        <AdornerDecorator Grid.Row="1">
            <Control Style="{StaticResource BusyAnimationStyle}" Visibility="{Binding IsBusy, Converter={StaticResource BooleanToVisibilityConverter}}"/>
        </AdornerDecorator>

    </Grid>
</Window>
