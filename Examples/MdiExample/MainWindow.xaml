<Window x:Class="MdiExample.MainWindow"
        xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
        xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
        xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
        xmlns:local="clr-namespace:MdiExample"
        xmlns:control="clr-namespace:MdiMvvm;assembly=MdiMvvm"
        mc:Ignorable="d"
        Title="MainWindow" Height="450" Width="800">


    <Window.Resources>

        <Style x:Key="cp" TargetType="{x:Type control:MdiWindow}">
            <Setter Property="Title" Value="{Binding Title, Mode=OneWay, UpdateSourceTrigger=PropertyChanged}"/>
            <Setter Property="IsModal" Value="{Binding IsModal, Mode=OneWayToSource, UpdateSourceTrigger=PropertyChanged}"/>
            <Setter Property="Width" Value="{Binding CurrentWidth, Mode=TwoWay, NotifyOnSourceUpdated=True, UpdateSourceTrigger=PropertyChanged}"/>
            <Setter Property="Height" Value="{Binding CurrentHeight, Mode=TwoWay, NotifyOnSourceUpdated=True, UpdateSourceTrigger=PropertyChanged}"/>
            <Setter Property="Canvas.Left" Value="{Binding CurrentLeft, Mode=TwoWay, NotifyOnSourceUpdated=True, UpdateSourceTrigger=PropertyChanged}"/>
            <Setter Property="Canvas.Top" Value="{Binding CurrentTop, Mode=TwoWay, NotifyOnSourceUpdated=True, UpdateSourceTrigger=PropertyChanged}"/>
            <Setter Property="WindowState" Value="{Binding WindowState, Mode=TwoWay, NotifyOnSourceUpdated=True, UpdateSourceTrigger=PropertyChanged}"/>

            <Setter Property="PreviousWidth" Value="{Binding PreviousWidth, Mode=TwoWay, NotifyOnSourceUpdated=True, UpdateSourceTrigger=PropertyChanged}"/>
            <Setter Property="PreviousHeight" Value="{Binding PreviousHeight, Mode=TwoWay, NotifyOnSourceUpdated=True, UpdateSourceTrigger=PropertyChanged}"/>
            <Setter Property="PreviousLeft" Value="{Binding PreviousLeft, Mode=TwoWay, NotifyOnSourceUpdated=True, UpdateSourceTrigger=PropertyChanged}"/>
            <Setter Property="PreviousTop" Value="{Binding PreviousTop, Mode=TwoWay, NotifyOnSourceUpdated=True, UpdateSourceTrigger=PropertyChanged}"/>
            <Setter Property="PreviousWindowState" Value="{Binding PreviousState, Mode=TwoWay, NotifyOnSourceUpdated=True, UpdateSourceTrigger=PropertyChanged}"/>
            
            <Setter Property="IsResizable" Value="True"/>
        </Style>

        <DataTemplate DataType="{x:Type local:MdiContainerViewModel}">
            <control:MdiContainer
                ItemsSource="{Binding ViewModelCollection}"
                ItemContainerStyle="{StaticResource cp}"/>
        </DataTemplate>

    </Window.Resources>

    <Grid>
        <Grid.RowDefinitions>
            <RowDefinition Height="Auto"/>
            <RowDefinition/>
        </Grid.RowDefinitions>

        <Menu>
            <MenuItem Header="+" Command="{Binding SelectedContainer.AddCommand}"/>
            <MenuItem Header="++" Command="{Binding SelectedContainer.AddCommandModal}"/>
            <MenuItem Header="Save" Command="{Binding Path=SaveCommand}"/>
            <MenuItem Header="Load" Command="{Binding Path=LoadCommand}"/>

        </Menu>

        <TabControl 
            Grid.Row="1"
            ItemsSource="{Binding Containers}"
            SelectedItem="{Binding SelectedContainer, UpdateSourceTrigger=PropertyChanged}">

            <TabControl.ItemTemplate>
                <DataTemplate DataType="{x:Type local:MdiContainerViewModel}">
                    <TextBlock Text="{Binding Title}"/>
                </DataTemplate>
            </TabControl.ItemTemplate>

        </TabControl>
    </Grid>
</Window>
